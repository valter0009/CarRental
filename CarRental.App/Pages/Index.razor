@page "/"
@using CarRental.Buisness.Classes
@using CarRental.Common.Interfaces
@using CarRental.Common.Enums
@inject HttpClient Http
@inject VehicleInputModel vehicleInput
@inject CustomerInputModel customerInput
@inject BookingProcessor bp


@code {
	protected override async Task OnInitializedAsync()
	{
		await bp.LoadData();



	}

	private void ClearCustomerInput()
	{
		customerInput.FirstName = "";
		customerInput.LastName = "";
		customerInput.SocialSecurityNumber = null;
	}

	private void ClearVehicleInput()
	{
		vehicleInput.Make = "";
		vehicleInput.RegNumber = "";
		vehicleInput.DailyCost = null;
		vehicleInput.CostKm = null;
		vehicleInput.Odometer = null;
		vehicleInput.Distance = null;
	}

	private void CloseErrorMessage()
	{
		bp.ErrorMessage = string.Empty;
	}
}



<PageTitle>Car Rental Assignment</PageTitle>

<h1 class="my-3 text-center">Car Rental Assignment</h1>

<div class="container">
	@if (bp.ErrorMessage != string.Empty)
	{
		<div class="mb-4 alert alert-danger d-flex justify-content-between flex-row-reverse">
			<button type="button" class="btn-close" @onclick="CloseErrorMessage"></button>
			<span><strong>Error: </strong>@bp.ErrorMessage</span>
		</div>
	}
</div>


<div class="container">
	<h4 class=" my-3">Vehicles</h4>

	<div id="vehicles" class="table-responsive col-12">
		<table class="table table-bordered">
			<thead>
				<tr class="bg-dark text-light">
					<th scope="col">RegNo</th>
					<th scope="col">Make</th>
					<th scope="col">Odometer</th>
					<th scope="col">Cost Km</th>
					<th scope="col">Vehicle Type</th>
					<th scope="col">Daily Cost</th>
					<th scope="col">Action</th>
					<th scope="col">Status</th>
				</tr>
				<tr>
					<th><input disabled="@bp.RentingInProgress" @bind="vehicleInput.RegNumber" type=" text" class="form-control my-2" placeholder="RegNo" aria-label="RegNo" aria-describedby="basic-addon1"></th>
					<th><input disabled="@bp.RentingInProgress" @bind="vehicleInput.Make" type="text" class="form-control my-2" placeholder="Make" aria-label="Make" aria-describedby="basic-addon1"></th>
					<th><input disabled="@bp.RentingInProgress" @bind="vehicleInput.Odometer" type="text" class="form-control my-2" placeholder="Odometer" aria-label="Odometer" aria-describedby="basic-addon1"></th>
					<th><input disabled="@bp.RentingInProgress" @bind="vehicleInput.CostKm" type="text" class="form-control my-2" placeholder="Cost Km" aria-label="Cost Km" aria-describedby="basic-addon1"></th>
					<th>
						<div disabled="@bp.RentingInProgress" class="input-group my-2">
							<select @bind="vehicleInput.VehicleType" class=" form-select" id="inputGroupSelect02" disabled="@bp.RentingInProgress">

								@foreach (var vehicleType in bp.VehicleTypeNames)
								{
									<option>@vehicleType</option>
								}
							</select>
						</div>
					</th>
					<th><input disabled="@bp.RentingInProgress" @bind="vehicleInput.DailyCost" type="text" class="form-control my-2" placeholder="Daily Cost" aria-label="Daily Cost" aria-describedby="basic-addon1"></th>
					<th>
						<button disabled="@bp.RentingInProgress" @onclick="()=>{

						bp.AddVehicle(vehicleInput.Make,vehicleInput.RegNumber,vehicleInput.VehicleType,vehicleInput.DailyCost,vehicleInput.CostKm,vehicleInput.Odometer);
						ClearVehicleInput();
											  }"
								type=" button" class="btn btn-outline-success mb-2">
							Add vehicle
						</button>
					</th>
					@if (bp.RentingInProgress)
					{
						<th>

							<div class="spinner-border mx-3 mb-2" role="status">

								<span class="visually-hidden">Loading...</span>
							</div>

						</th>
					}
				</tr>
			</thead>
			<tbody>
				@foreach (var vehicle in bp.GetVehicles())
				{
					<tr>
						<th scope="row">@vehicle.RegNumber.ToUpper()</th>
						<td>@vehicle.Make</td>
						<td>@vehicle.Odometer km</td>
						<td>@vehicle.KmCost$</td>
						<td>@vehicle.VehicleType</td>
						<td>@vehicle.DailyCost$</td>

						<td>
							@if (vehicle.VehicleStatus == VehicleStatuses.Available)
							{
								<div class="input-group my-2">
									<select disabled="@bp.RentingInProgress" @bind="customerInput.Id" class="form-select" id="inputGroupSelect02">

										@foreach (var customer in bp.GetCustomers())
										{
											<option value="@customer.Id">@customer.FullName (@customer.SocialSecurityNumber)</option>
										}
									</select>
								</div>

								<button disabled="@bp.RentingInProgress" @onclick="()=>bp.RentVehicle(vehicle.Id, customerInput.Id)" type=" button" class="btn btn-outline-success mb-2">Rent</button>
							}
							else
							{

							<th><input @bind="vehicleInput.Distance" type="text" class="form-control my-2" placeholder="Distance" aria-label="Distance" aria-describedby="basic-addon1"></th>

							<button @onclick="()=>{bp.ReturnVehicle(vehicle.Id, vehicleInput.Distance);ClearVehicleInput();}" type=" button" class="btn btn-outline-danger mb-2">Return</button>
							}
						</td>




						<td>
							<span class="badge font-weight-normal fs-7 @(vehicle.VehicleStatus == VehicleStatuses.Available ? "bg-dark" : "bg-danger")">
								@(vehicle.VehicleStatus == VehicleStatuses.Available ? "Available" : "Booked")
							</span>
						</td>
					</tr>
				}

			</tbody>
		</table>
	</div>

	<h4 class=" my-3 pt-3">Bookings</h4>

	<div id="bookings" class="table-responsive table-bordered col-10 ">
		<table class="table">
			<thead>
				<tr class="bg-dark text-light">
					<th scope="col">RegNo</th>
					<th scope="col">Customer</th>
					<th scope="col">Km Rented</th>
					<th scope="col">Km Returned</th>
					<th scope="col">Rented</th>
					<th scope="col">Returned</th>
					<th scope="col">Cost</th>
					<th scope="col">Status</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var booking in bp.GetBookings())
				{
					<tr>

						<td>@booking.Vehicle.RegNumber</td>
						<td>@booking.Customer.FullName</td>
						<td>@booking.KmWhenRented</td>
						<td>@booking.KmWhenReturned </td>
						<td>@booking.RentedDate.ToString("d")</td>
						<td>
							<span class="@(booking.ReturnedDate < booking.RentedDate ? "d-none" : "")">
								@booking.ReturnedDate.ToString("d")
							</span>
						</td>
						<td>@booking.TotalCost $</td>
						<td>
							<span class="badge font-weight-normal fs-6 @(booking.BookingStatus ? "bg-danger" : "bg-success")">
								@(booking.BookingStatus ? "Open" : "Closed")
							</span>
						</td>

					</tr>
				}

			</tbody>
		</table>
	</div>

	<h4 class=" my-3 pt-3">Customers</h4>

	<div id="Customers" class="table-responsive table-bordered  col-5">
		<table class="table ">
			<thead>
				<tr class="bg-dark text-light">
					<th scope="col">SSN</th>
					<th scope="col">First Name</th>
					<th scope="col">Last Name</th>
				</tr>

				<tr>
					<th><input @bind="customerInput.SocialSecurityNumber" type="text" class="form-control my-2" placeholder="SSN" aria-label="SSN" aria-describedby="basic-addon1"></th>
					<th><input @bind="customerInput.FirstName" type="text" class="form-control my-2" placeholder="First Name" aria-label="First Name" aria-describedby="basic-addon1"></th>
					<th><input @bind="customerInput.LastName" type="text" class="form-control my-2" placeholder="Last Name" aria-label="Last Name" aria-describedby="basic-addon1"></th>
					<th>
						<button type="button" class="btn btn-outline-success mb-2" @onclick="()=>{

					bp.AddCustomer(customerInput.FirstName,customerInput.LastName, customerInput.SocialSecurityNumber);
					ClearCustomerInput();
					                                                                             }">
							Add
						</button>
					</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var customer in bp.GetCustomers())
				{
					<tr>
						<th scope="row">@customer.SocialSecurityNumber</th>
						<td>@customer.FirstName</td>
						<td>@customer.LastName</td>

					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

